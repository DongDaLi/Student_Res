<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dongli.dao.UserDao">
    <resultMap id="BaseResultMap" type="com.dongli.entity.User">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="account" property="account" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="role" property="role" jdbcType="INTEGER" />
        <result column="roleState" property="roleState" jdbcType="INTEGER" />
        <result column="roleName" property="roleName" jdbcType="VARCHAR" />
    </resultMap>
    <select id="selectUserByAccount" resultMap="BaseResultMap" parameterType="hashmap">
        SELECT * FROM user
        <if test="account != null and account != '' ">
            <where>
                AND account = #{account}
            </where>
        </if>
    </select>

    <select id="selectSchoolOfUser" parameterType="string" resultMap="BaseResultMap">
        SELECT DISTINCT roleState,user.account as account,password, role FROM school join user on school.account = user.account
        <where>
            user.account = #{account}
        </where>
    </select>

    <select id="selectStudentOfUser" parameterType="string" resultMap="BaseResultMap">
        SELECT DISTINCT roleState,user.account as account,password, role FROM student join user on student.IDNum = user.account
        <where>
            account = #{account}
        </where>
    </select>

    <insert id="insertUser" parameterType="com.dongli.entity.User">
        INSERT INTO user(account, password, role) VALUES(#{account}, #{password}, #{role})
    </insert>
    
    <select id="selectUserByPhoneAndAccount" parameterType="hashmap" resultType="int">
        SELECT count(*) FROM (SELECT account,tel FROM admin union all
                        SELECT account,tel FROM school union all
                        SELECT IDNum AS account, tel FROM student)
        WHERE account = #{account} AND tel = #{tel}
    </select>

    <update id="updatePwdByAccount" parameterType="hashmap">
        UPDATE user
        <set>
            password = #{password}
        </set>
        <where>
            account = #{account}
        </where>
    </update>
</mapper>